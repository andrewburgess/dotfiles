#!/bin/bash

{{ if and (eq .chezmoi.os "linux") (contains "debian" .oslike) -}}
    {{ range .packages.linux.apt }}
sudo apt-get install -y {{ . }}
    {{ end -}}

    {{ range .packages.linux.common}}
sudo apt-get install -y {{ . }}
    {{ end -}}
{{ end -}}

{{ if and (eq .chezmoi.os "linux") (contains "fedora" .osid) -}}
sudo dnf update -y
sudo dnf install akmod-nvidia -y
sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
sudo dnf config-manager setopt fedora-cisco-openh264.enabled=1
sudo dnf update @core -y
sudo dnf swap ffmpeg-free ffmpeg --allowerasing -y
sudo dnf update @multimedia -y --setopt="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak remote-modify --no-filter --enable flathub

# 1Password RPM repository
sudo rpm --import https://downloads.1password.com/linux/keys/1password.asc
sudo sh -c 'echo -e "[1password]\nname=1Password Stable Channel\nbaseurl=https://downloads.1password.com/linux/rpm/stable/\$basearch\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=\"https://downloads.1password.com/linux/keys/1password.asc\"" > /etc/yum.repos.d/1password.repo'

    {{ range .packages.linux.dnf }}
sudo dnf install -y {{ . }}
    {{ end -}}

    {{ range .packages.linux.common}}
sudo dnf install -y {{ . }}
    {{ end -}}

{{ end -}}

# Install Homebrew
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# Install Homebrew packages
{{ range .packages.linux.brew }}
brew install {{ . }}
{{ end -}}

# Install nvm
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ (gitHubLatestRelease "nvm-sh/nvm").TagName }}/install.sh | bash

# Install oh-my-zsh
RUNZSH=no sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" --keep-zshrc

# Setup aws-vault
AWS_ACCESS_KEY_ID=$(op item get "Amazon AWS" --fields "access key" --reveal) AWS_SECRET_ACCESS_KEY=$(op item get "Amazon AWS" --fields "access secret" --reveal) aws-vault add andrewb --env
